00:00 +0: loading /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart                                                                                                 00:01 +0: loading /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart                                                                                                 00:01 +0: loading /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart                                                                                    00:01 +0: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: getCountries should check if device is online                                             00:01 +1: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: getCountries should check if device is online                                             00:01 +1: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: ... is online should return remote data when call to backup data source is successful     00:01 +2: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: ... is online should return remote data when call to backup data source is successful     00:01 +2: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: ... is online should return server failure when call to backup data source is unsuccessful00:01 +3: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: ... is online should return server failure when call to backup data source is unsuccessful00:01 +3: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: getCountries device is offline should return network failure when device is offline       00:01 +4: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: getCountries device is offline should return network failure when device is offline       00:01 +4: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: getStatesByCountryName should check if device is online                                   00:01 +5: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: getStatesByCountryName should check if device is online                                   00:01 +5: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: ... device is online should return states when call to backup data source is successful   00:01 +6: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: ... device is online should return states when call to backup data source is successful   00:01 +6: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: getStates should attempt to load countries if mapping is not available                    00:01 +7: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/backup_repository_impl_test.dart: getStates should attempt to load countries if mapping is not available                    00:01 +7: loading /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart                                                                                     00:01 +7: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: should get states from primary repository when successful                                  00:01 +8: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: should get states from primary repository when successful                                  00:01 +8: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: should get states from backup repository when primary fails and country mapping exists     00:01 +9: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: should get states from backup repository when primary fails and country mapping exists     00:01 +9: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: should return primary failure when primary fails and no country mapping exists             00:01 +10: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: should return primary failure when primary fails and no country mapping exists            00:01 +10: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: should return backup failure when both repositories fail                                  00:01 +11: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: should return backup failure when both repositories fail                                  00:01 +11: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: should not try backup if useBackupOnFailure is false                                      00:01 +12: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: should not try backup if useBackupOnFailure is false                                      00:01 +12: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: updateCountryMap should correctly store country id to name mapping                        00:01 +13: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: updateCountryMap should correctly store country id to name mapping                        00:02 +13: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_states_usecase_test.dart: updateCountryMap should correctly store country id to name mapping                        00:02 +13: loading /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_countries_usecase_test.dart                                                                                 00:02 +13: /Users/shubham/Development/topdoc-gitlab/country_state/test/usecase/get_countries_usecase_test.dart: should get countries from primary repository when successful                           00:02 +14: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: initial state should be correct                                                                       00:02 +15: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: initial state should be correct                                                                       00:02 +16: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: initial state should be correct                                                                       00:02 +17: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: initial state should be correct                                                                       00:02 +18: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: initial state should be correct                                                                       00:02 +18: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: loadCountries should call GetCountriesUseCase                                                         00:02 +19: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: loadCountries should call GetCountriesUseCase                                                         00:02 +19: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: loadCountries should update state to loading and then success                                         00:02 +20: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: loadCountries should update state to loading and then success                                         00:02 +20: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: loadCountries should update state to loading and then error                                           00:02 +21: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: loadCountries should update state to loading and then error                                           00:02 +21: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: loadStates should call GetStatesUseCase with correct params                                           00:02 +22: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: loadStates should call GetStatesUseCase with correct params                                           00:02 +22: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: loadStates should update state to loading and then success                                            00:02 +23: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: loadStates should update state to loading and then success                                            00:02 +23: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: selectCountry should update selectedCountry and load states                                           00:02 +24: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: selectCountry should update selectedCountry and load states                                           00:02 +24: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: selectState should update selectedState                                                               00:02 +25: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: selectState should update selectedState                                                               00:02 +25: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: resetError should clear the error message                                                             00:02 +26: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: resetError should clear the error message                                                             00:02 +26: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: forceBackupApi should reset state and load countries                                                  00:02 +27: /Users/shubham/Development/topdoc-gitlab/country_state/test/location_cubit_test.dart: forceBackupApi should reset state and load countries                                                  00:02 +27: loading /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart                                                                                 00:02 +27: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: getCountries should check if device is online                                          00:02 +28: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: getCountries should check if device is online                                          00:02 +28: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: ... is online should return remote data when call to remote data source is successful  00:02 +29: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: ... is online should return remote data when call to remote data source is successful  00:02 +29: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: ... online should return server failure when call to remote data source is unsuccessful00:02 +30: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: ... online should return server failure when call to remote data source is unsuccessful00:02 +30: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: ... device is online should return unexpected failure when a general exception occurs  00:02 +31: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: ... device is online should return unexpected failure when a general exception occurs  00:02 +31: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: getCountries device is offline should return network failure when device is offline    00:02 +32: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: getCountries device is offline should return network failure when device is offline    00:02 +32: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: getStates should check if device is online                                             00:02 +33: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: getStates should check if device is online                                             00:02 +33: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: ... is online should return remote data when call to remote data source is successful  00:02 +34: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: ... is online should return remote data when call to remote data source is successful  00:02 +34: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: ... online should return server failure when call to remote data source is unsuccessful00:02 +35: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: ... online should return server failure when call to remote data source is unsuccessful00:02 +35: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: ... device is online should return unexpected failure when a general exception occurs  00:02 +36: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: ... device is online should return unexpected failure when a general exception occurs  00:02 +36: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: getStates device is offline should return network failure when device is offline       00:02 +37: /Users/shubham/Development/topdoc-gitlab/country_state/test/repo/location_repository_impl_test.dart: getStates device is offline should return network failure when device is offline       00:02 +37: All tests passed!                                                                                                                                                                           
